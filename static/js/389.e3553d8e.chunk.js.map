{"version":3,"file":"static/js/389.e3553d8e.chunk.js","mappings":"oOACA,EAA0B,8BAA1B,EAA+D,2BAA/D,EAAkG,4BAAlG,EAAsI,4BAAtI,EAA8K,gCAA9K,EAA6N,mC,SC0F7N,EApFqB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAe,SAACC,GAClB,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,OAAQL,GACJ,IAAK,QACD,OAAOH,EAASQ,GACpB,IAAK,WACD,OAAON,EAAYM,GACvB,IAAK,OACD,OAAOJ,EAAQI,GACnB,QACI,SAUNC,EAAQ,WACVT,EAAS,IACTE,EAAY,IACZE,EAAQ,KAIZ,OACI,gBAAKM,UAAWC,EAAhB,UACI,kBAAMD,UAAWC,EAAQC,SAfZ,SAACN,GAClBA,EAAEO,iBACFjB,EAASkB,EAAAA,EAAAA,SAAwB,CAAEX,KAAAA,EAAMJ,MAAAA,EAAOE,SAAAA,KAChDQ,KAYI,WACI,mBAAOC,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,mBACA,kBACII,YAAY,OACZL,UAAWC,EACXK,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRX,MAAOL,EACPiB,SAAUf,QAGlB,mBAAOK,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,oBACA,kBACII,YAAY,oBACZL,UAAWC,EACXK,KAAK,QACLb,KAAK,QACLgB,UAAQ,EACRX,MAAOT,EACPqB,SAAUf,QAGlB,mBAAOK,UAAWC,EAAlB,WACI,iBAAMD,UAAWC,EAAjB,uBACA,kBACII,YAAY,kCACZG,MAAM,4CACNR,UAAWC,EACXK,KAAK,WACLb,KAAK,WACLgB,UAAQ,EACRX,MAAOP,EACPmB,SAAUf,QAGlB,mBAAQK,UAAWC,EAAgBK,KAAK,SAAxC","sources":["webpack://goit-react-hw-08-phonebook/./src/views/RegisterView/RegisterView.module.css?6d4e","views/RegisterView/RegisterView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"RegisterView_wrapper__W+n8r\",\"form\":\"RegisterView_form__q9n4X\",\"label\":\"RegisterView_label__Aacwx\",\"input\":\"RegisterView_input__UcX6h\",\"labelText\":\"RegisterView_labelText__pE4Ek\",\"submitButton\":\"RegisterView_submitButton__4JNSx\"};","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { Notify } from 'notiflix';\n// import ClipLoader from 'react-spinner/ClipLoader';\nimport authOperations from 'redux/auth/auth-operations';\nimport s from './RegisterView.module.css';\n\nconst RegisterView = () => {\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n\n    const handleChange = (e) => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case 'email':\n                return setEmail(value);\n            case 'password':\n                return setPassword(value);\n            case 'name':\n                return setName(value);\n            default:\n                return;\n        };\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(authOperations.register({ name, email, password }));\n        reset();\n    };\n\n    const reset = () => {\n        setEmail('');\n        setPassword('');\n        setName('');\n    };\n\n\n    return (\n        <div className={s.wrapper}>\n            <form className={s.form} onSubmit={handleSubmit}>\n                <label className={s.label}>\n                    <span className={s.labelText}>Name</span>\n                    <input\n                        placeholder='John'\n                        className={s.input}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label className={s.label}>\n                    <span className={s.labelText}>Email</span>\n                    <input\n                        placeholder='example@gmail.com'\n                        className={s.input}\n                        type=\"email\"\n                        name=\"email\"\n                        required\n                        value={email}\n                        onChange={handleChange}\n                    />\n                </label>\n                <label className={s.label}>\n                    <span className={s.labelText}>Password</span>\n                    <input\n                        placeholder='Must have at least 8 characters'\n                        title=\"Password must contain letters and numbers\"\n                        className={s.input}\n                        type=\"password\"\n                        name=\"password\"\n                        required\n                        value={password}\n                        onChange={handleChange}\n                    />\n                </label>\n                <button className={s.submitButton} type=\"submit\">\n                    Register\n                </button>\n            </form>\n        </div>\n    );\n};\n\n\nexport default RegisterView;"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","name","setName","handleChange","e","currentTarget","value","reset","className","s","onSubmit","preventDefault","authOperations","placeholder","type","pattern","title","required","onChange"],"sourceRoot":""}