{"version":3,"file":"static/js/30.329a4c91.chunk.js","mappings":"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","sources":["redux/contacts/contacts-slice.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.js","redux/contacts/contacts-actions.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsItem/ContactsItem.module.css?8722","components/ContactsItem/ContactsItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.js","views/ContactsView/ContactsView.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n    reducerPath: 'contacts',\n    baseQuery: fetchBaseQuery({\n        baseUrl: 'https://connections-api.herokuapp.com',\n        prepareHeaders: (headers, { getState }) => {\n            const token = getState().auth.token;\n            if (token) {\n                headers.set('authorization', `Bearer ${token}`);\n            }\n\n            return headers;\n        },\n    }),\n    tagTypes: ['Contacts'],\n    endpoints: builder => ({\n        fetchAllContacts: builder.query({\n            query: () => `/contacts`,\n            method: 'GET',\n            providesTags: ['Contacts'],\n        }),\n        addContact: builder.mutation({\n            query: ({ name, number }) => ({\n                url: '/contacts',\n                method: 'POST',\n                body: { name: name, number: number },\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n        deleteContact: builder.mutation({\n            query: id => ({\n                url: `/contacts/${id}`,\n                method: 'DELETE',\n            }),\n            invalidatesTags: ['Contacts'],\n        }),\n    }),\n});\n\nexport const {\n    useFetchAllContactsQuery,\n    useAddContactMutation,\n    useDeleteContactMutation,\n} = contactsApi;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"labelText\":\"ContactsForm_labelText__MTX-A\",\"input\":\"ContactsForm_input__UjXFK\",\"button\":\"ContactsForm_button__zuUB3\"};","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { ClipLoader } from 'react-spinners';\nimport { useAddContactMutation, useFetchAllContactsQuery } from 'redux/contacts/contacts-slice';\nimport s from './ContactsForm.module.css';\n\nconst ContactsForm = () => {\n    const [params, setParams] = useState({ name: '', phone: '' });\n    const [addContact, { isLoading }] = useAddContactMutation();\n    const { data } = useFetchAllContactsQuery();\n\n    const handleChange = e => {\n        const { name, value } = e.currentTarget;\n        setParams({ ...params, [name]: value });\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        data.find(({ name, phone }) =>\n            params.name === name ||\n            params.phone === phone\n        )\n            ? Notify.failure(`${params.name} exists in your phonebook`)\n            : addContactOnSubmit();\n    };\n\n    const addContactOnSubmit = () => {\n        addContact(params);\n        Notify.success(`${params.name} has been added to your phonebook`);\n        reset();\n    };\n\n    const reset = () => {\n        setParams({ name: '', phone: '' });\n    };\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <label className={s.label}>\n                <span className={s.labelText}>\n                    Name\n                </span>\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={params.name}\n                    onChange={handleChange}\n                />\n            </label>\n            <label className={s.label}>\n                <span className={s.labelText}>\n                    Phone number\n                </span>\n                <input\n                    className={s.input}\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={params.phone}\n                    onChange={handleChange}\n                />\n            </label>\n            <button className={s.button} type='submit'>\n                {isLoading ? <ClipLoader size='10px' /> : 'Add contact'}\n            </button>\n        </form>\n    );\n};\n\nexport default ContactsForm;","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction('contacts/changeFilter');","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsFilter_wrapper__90o0z\",\"label\":\"ContactsFilter_label__48a3p\",\"input\":\"ContactsFilter_input__8nlWg\",\"labelText\":\"ContactsFilter_labelText__FMBfa\"};","import { useDispatch, useSelector } from \"react-redux\";\nimport { changeFilter } from \"redux/contacts/contacts-actions\";\nimport s from './ContactsFilter.module.css';\n\nconst ContactsFilter = () => {\n    const value = useSelector(state => state.filter);\n    const dispatch = useDispatch();\n\n    const onFilterInputChange = e => {\n        dispatch(changeFilter(e.currentTarget.value));\n    };\n\n    return (\n        <div className={s.wrapper}>\n            <label>\n                <span className={s.labelText}>\n                    Find contact using name or phone number\n                </span>\n                <input\n                    className={s.input}\n                    type='text'\n                    name='filter'\n                    value={value}\n                    placeholder='Viktor'\n                    onChange={onFilterInputChange()}\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default ContactsFilter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsItem_item__pedOi\",\"button\":\"ContactsItem_button__uPo7U\"};","import { ClipLoader } from \"react-spinners\";\nimport { useDeleteContactMutation } from \"redux/contacts/contacts-slice\";\nimport s from './ContactsItem.module.css';\n\n\nconst ContactsItem = ({ id, name, phone }) => {\n    const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n    return (\n        <li className={s.item}>\n            <p className={s.text}>{name}</p>\n            <p className={s.text}>{phone}</p>\n            <button\n                className={s.button}\n                type='button'\n                onClick={() => deleteContact(id)}\n                disabled={isDeleting}\n            >\n                {isDeleting ? <ClipLoader size={10} /> : \"Delete\"}\n            </button>\n        </li>\n    );\n};\n\nexport default ContactsItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"loader\":\"ContactsList_loader__Wb5g0\"};","import { useSelector } from \"react-redux\";\nimport { ClipLoader } from \"react-spinners\";\nimport { useFetchAllContactsQuery } from \"redux/contacts/contacts-slice\";\nimport ContactsItem from 'components/ContactsItem';\nimport s from './ContactsList.module.css'\n\nconst ContactsList = () => {\n    const { data, isFetching } = useFetchAllContactsQuery();\n    const filter = useSelector(state => state.filter);\n\n    const getFilteredContacts = (filter, contacts) => {\n        return contacts?.filter(\n            ({ name, phone }) =>\n                name.toLowerCase().includes(filter.toLowerCase()) ||\n                phone.includes(filter)\n        );\n    };\n\n    const contacts = getFilteredContacts(filter, data);\n\n    return (\n        <>\n            {isFetching && <ClipLoader className={s.loader} />}\n            {!isFetching &&\n                <ul className={s.list}>\n                    {contacts && contacts.map(({ id, name, phone }) => (\n                        <ContactsItem\n                            key={id}\n                            id={id}\n                            name={name}\n                            phone={phone}\n                        />\n                    ))}\n\n                </ul>\n            }\n        </>\n    );\n};\n\nexport default ContactsList;","import ContactsForm from \"components/ContactsForm\";\nimport ContactsFilter from \"components/ContactsFilter\";\nimport ContactsList from \"components/ContactsList\";\n\nconst ContactsView = () => (\n    <>\n        <ContactsForm/>\n        <ContactsFilter/>\n        <ContactsList />\n    </>\n);\n\nexport default ContactsView;"],"names":["contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","auth","set","tagTypes","endpoints","builder","fetchAllContacts","query","method","providesTags","addContact","mutation","url","body","name","number","invalidatesTags","deleteContact","id","useFetchAllContactsQuery","useAddContactMutation","useDeleteContactMutation","useState","phone","params","setParams","isLoading","data","handleChange","e","currentTarget","value","addContactOnSubmit","Notify","reset","className","s","onSubmit","preventDefault","find","type","pattern","title","required","onChange","ClipLoader","size","changeFilter","createAction","useSelector","state","filter","dispatch","useDispatch","placeholder","isDeleting","onClick","disabled","isFetching","contacts","toLowerCase","includes","getFilteredContacts","map"],"sourceRoot":""}