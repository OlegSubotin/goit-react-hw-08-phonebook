{"version":3,"file":"static/js/41.7a89e3d8.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsFilter/ContactsFilter.module.css?d01d","components/ContactsFilter/ContactsFilter.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsItem/ContactsItem.module.css?8722","components/ContactsItem/ContactsItem.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.js","views/ContactsView/ContactsView.js"],"sourcesContent":["const getContacts = state => state.contacts.items;\nconst getFilterValue = state => state.contacts.filter;\nconst getLoading = state => state.contacts.isLoading;\nconst getError = state => state.contacts.error;\n\n\nconst contactsSelectors = {\n    getContacts,\n    getFilterValue,\n    getLoading,\n    getError,\n};\n\nexport default contactsSelectors;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"label\":\"ContactsForm_label__Z7jht\",\"labelText\":\"ContactsForm_labelText__MTX-A\",\"input\":\"ContactsForm_input__UjXFK\",\"button\":\"ContactsForm_button__zuUB3\"};","import { useState } from 'react';\nimport { Notify } from 'notiflix';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport s from './ContactsForm.module.css';\n\nconst ContactsForm = () => {\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const dispatch = useDispatch();\n\n    const handleChangeName = e => {\n        setName(e.currentTarget.value);\n    };\n    const handleChangePhone = e => {\n        setPhone(e.currentTarget.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        const newContact = {\n            name, phone,\n        };\n        if (\n            contacts.some(contact =>\n                name === contact.name\n            )\n        ) {\n            return Notify.info(`${name} exists in your phonebook`);\n        }\n        dispatch(contactsOperations.addContact(newContact));\n        Notify.success(`${name} has been added to your phonebook`);\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setPhone('');\n    };\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <label className={s.label}>\n                <span className={s.labelText}>\n                    Name\n                </span>\n                <input\n                    className={s.input}\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    value={name}\n                    onChange={handleChangeName}\n                />\n            </label>\n            <label className={s.label}>\n                <span className={s.labelText}>\n                    Phone number\n                </span>\n                <input\n                    className={s.input}\n                    type=\"tel\"\n                    name=\"phone\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    value={phone}\n                    onChange={handleChangePhone}\n                />\n            </label>\n            <button className={s.button} type='submit'>\n                Add contact\n            </button>\n        </form>\n    );\n};\n\nexport default ContactsForm;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsFilter_wrapper__90o0z\",\"label\":\"ContactsFilter_label__48a3p\",\"input\":\"ContactsFilter_input__8nlWg\",\"labelText\":\"ContactsFilter_labelText__FMBfa\"};","import { useDispatch } from \"react-redux\";\nimport { filteredContact } from 'redux/contacts/contacts-slice';\nimport s from './ContactsFilter.module.css';\n\nconst ContactsFilter = () => {\n    const dispatch = useDispatch();\n\n    const onFilterInputChange = e => {\n        dispatch(filteredContact(e.currentTarget.value));\n    };\n\n    return (\n        <div className={s.wrapper}>\n            <label>\n                <span className={s.labelText}>\n                    Find contact using name or phone number\n                </span>\n                <input\n                    className={s.input}\n                    type='text'\n                    name='filter'\n                    placeholder='Viktor'\n                    onChange={onFilterInputChange()}\n                />\n            </label>\n        </div>\n    );\n};\n\nexport default ContactsFilter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactsItem_item__pedOi\",\"button\":\"ContactsItem_button__uPo7U\"};","import { useDispatch } from \"react-redux\";\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport s from './ContactsItem.module.css';\n\nconst ContactsItem = ({ id, name, phone }) => {\n    const dispatch = useDispatch;\n\n    return (\n        <li className={s.item}>\n            <p className={s.text}>{name}</p>\n            <p className={s.text}>{phone}</p>\n            <button\n                className={s.button}\n                type='button'\n                onClick={() => dispatch(contactsOperations.deleteContact(id))}\n            >\n            </button>\n        </li>\n    );\n};\n\nexport default ContactsItem;\n\n\n\n\n\n\n\n// import { ClipLoader } from \"react-spinners\";\n// import { useDeleteContactMutation } from \"redux/contacts/contacts-slice\";\n// import s from './ContactsItem.module.css';\n\n\n// const ContactsItem = ({ id, name, phone }) => {\n//     const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n//     return (\n//         <li className={s.item}>\n//             <p className={s.text}>{name}</p>\n//             <p className={s.text}>{phone}</p>\n//             <button\n//                 className={s.button}\n//                 type='button'\n//                 onClick={() => deleteContact(id)}\n//                 disabled={isDeleting}\n//             >\n//                 {isDeleting ? <ClipLoader size={10} /> : \"Delete\"}\n//             </button>\n//         </li>\n//     );\n// };\n\n// export default ContactsItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__mmE3Y\",\"loader\":\"ContactsList_loader__Wb5g0\"};","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport contactsSelectors from \"redux/contacts/contacts-selectors\";\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport ContactsItem from 'components/ContactsItem';\nimport s from './ContactsList.module.css';\n\n\nconst ContactsList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(contactsSelectors.getContacts);\n    const filterValue = useSelector(contactsSelectors.getFilterValue);\n\n    useEffect(() => {\n        dispatch(contactsOperations.fetchContacts());\n    }, [dispatch]);\n\n    const filteredContacts = () => {\n        const normalizedFilter = filterValue.toLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(normalizedFilter)\n        );\n    };\n\n    const filteredContactList = filteredContacts();\n\n    return (\n        <ul className={s.list}>\n            {contacts && filteredContactList.map(({ id, name, phone }) => (\n                <ContactsItem\n                    key={id}\n                    id={id}\n                    name={name}\n                    phone={phone}\n                />\n            ))}\n\n        </ul>\n    );\n};\n\nexport default ContactsList;\n\n\n\n\n\n\n\n\n\n\n// import { useSelector } from \"react-redux\";\n// import { ClipLoader } from \"react-spinners\";\n// import { useFetchAllContactsQuery } from \"redux/contacts/contacts-slice\";\n// import ContactsItem from 'components/ContactsItem';\n// import s from './ContactsList.module.css'\n\n// const ContactsList = () => {\n//     const { data, isFetching } = useFetchAllContactsQuery();\n//     const filter = useSelector(state => state.filter);\n\n//     const getFilteredContacts = (filter, contacts) => {\n//         return contacts?.filter(\n//             ({ name, phone }) =>\n//                 name.toLowerCase().includes(filter.toLowerCase()) ||\n//                 phone.includes(filter)\n//         );\n//     };\n\n//     const contacts = getFilteredContacts(filter, data);\n\n//     return (\n//         <>\n//             {isFetching && <ClipLoader className={s.loader} />}\n//             {!isFetching &&\n//                 <ul className={s.list}>\n//                     {contacts && contacts.map(({ id, name, phone }) => (\n//                         <ContactsItem\n//                             key={id}\n//                             id={id}\n//                             name={name}\n//                             phone={phone}\n//                         />\n//                     ))}\n\n//                 </ul>\n//             }\n//         </>\n//     );\n// };\n\n// export default ContactsList;","import ContactsForm from \"components/ContactsForm\";\nimport ContactsFilter from \"components/ContactsFilter\";\nimport ContactsList from \"components/ContactsList\";\n\nconst ContactsView = () => (\n    <>\n        <ContactsForm/>\n        <ContactsFilter/>\n        <ContactsList />\n    </>\n);\n\nexport default ContactsView;"],"names":["getContacts","state","contacts","items","getFilterValue","filter","getLoading","isLoading","getError","error","useState","name","setName","phone","setPhone","useSelector","contactsSelectors","dispatch","useDispatch","reset","className","s","onSubmit","e","preventDefault","newContact","some","contact","Notify","contactsOperations","type","pattern","title","required","value","onChange","currentTarget","placeholder","filteredContact","id","onClick","filterValue","useEffect","filteredContactList","normalizedFilter","toLowerCase","includes","filteredContacts","map"],"sourceRoot":""}